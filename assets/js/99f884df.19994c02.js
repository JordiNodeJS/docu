"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4968],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1278:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},i="What's New in 6.4?",s={unversionedId:"react-router-6/overview",id:"react-router-6/overview",title:"What's New in 6.4?",description:"v6.4 is our most exciting release yet with new data abstractions for reads, writes, and navigation hooks to easily keep your UI in sync with your data. The new feature overview will catch you up.",source:"@site/docs/react-router-6/overview.md",sourceDirName:"react-router-6",slug:"/react-router-6/overview",permalink:"/docu/docs/react-router-6/overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"React Router v6.4.3",permalink:"/docu/docs/category/react-router-v643"},next:{title:"tutorial",permalink:"/docu/docs/react-router-6/tutorial"}},l={},c=[{value:"Client Side Routing",id:"client-side-routing",level:2},{value:"Nested Routes",id:"nested-routes",level:2},{value:"Ranked Route Matching",id:"ranked-route-matching",level:2},{value:"Active Links",id:"active-links",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"whats-new-in-64"},"What's New in 6.4?"),(0,a.kt)("p",null,"v6.4 is our most exciting release yet with new data abstractions for reads, writes, and navigation hooks to easily keep your UI in sync with your data. The new feature overview will catch you up."),(0,a.kt)("h1",{id:"feature-overview"},"Feature Overview"),(0,a.kt)("h2",{id:"client-side-routing"},"Client Side Routing"),(0,a.kt)("p",null,'React Router enables "client side routing".'),(0,a.kt)("p",null,"In traditional websites, the browser requests a document from a web server, downloads and evaluates CSS and JavaScript assets, and renders the HTML sent from the server. When the user clicks a link, it starts the process all over again for a new page."),(0,a.kt)("p",null,"Client side routing allows your app to update the URL from a link click without making another request for another document from the server. Instead, your app can immediately render some new UI and make data requests with ",(0,a.kt)("inlineCode",{parentName:"p"},"fetch")," to update the page with new information."),(0,a.kt)("p",null,"This enables faster user experiences because the browser doesn't need to request an entirely new document or re-evaluate CSS and JavaScript assets for the next page. It also enables more dynamic user experiences with things like animation."),(0,a.kt)("p",null,"Client side routing is enabled by creating a ",(0,a.kt)("inlineCode",{parentName:"p"},"Router")," and linking/submitting to pages with ",(0,a.kt)("inlineCode",{parentName:"p"},"Link")," and ``:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import React from "react";\nimport { createRoot } from "react-dom/client";\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  Route,\n  Link,\n} from "react-router-dom";\n\nconst router = createBrowserRouter([\n  {\n    path: "/",\n    element: (\n      \n        Hello World\n        About Us\n      \n    ),\n  },\n  {\n    path: "about",\n    element: About,\n  },\n]);\n\ncreateRoot(document.getElementById("root")).render(\n  \n);\n')),(0,a.kt)("h2",{id:"nested-routes"},"Nested Routes"),(0,a.kt)("p",null,"Nested Routing is the general idea of coupling segments of the URL to component hierarchy and data. React Router's nested routes were inspired by the routing system in Ember.js circa 2014. The Ember team realized that in nearly every case, segments of the URL determine:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The layouts to render on the page"),(0,a.kt)("li",{parentName:"ul"},"The data dependencies of those layouts")),(0,a.kt)("p",null,"React Router embraces this convention with APIs for creating nested layouts coupled to URL segments and data."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'// Configure nested routes with JSX\ncreateBrowserRouter(\n  createRoutesFromElements(\n    \n      \n      \n          fetch("/api/dashboard.json", {\n            signal: request.signal,\n          })\n        }\n      />\n      \n        \n        \n      \n    \n  )\n);\n// Or use plain objects\ncreateBrowserRouter([\n  {\n    path: "/",\n    element: ,\n    children: [\n      {\n        path: "contact",\n        element: ,\n      },\n      {\n        path: "dashboard",\n        element: ,\n        loader: ({ request }) =>\n          fetch("/api/dashboard.json", {\n            signal: request.signal,\n          }),\n      },\n      {\n        element: ,\n        children: [\n          {\n            path: "login",\n            element: ,\n            loader: redirectIfUser,\n          },\n          {\n            path: "logout",\n            action: logoutUser,\n          },\n        ],\n      },\n    ],\n  },\n]);\n\n')),(0,a.kt)("p",null,"This ",(0,a.kt)("a",{parentName:"p",href:"https://remix.run/_docs/routing"},"visualization")," might be helpful."),(0,a.kt)("p",null,"Segments of the URL can be dynamic placeholders that are parsed and provided to various apis."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"")),(0,a.kt)("p",null,"The two segments with ",(0,a.kt)("inlineCode",{parentName:"p"},":")," are dynamic, and provided to the following APIs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'// If the current location is /projects/abc/tasks/3\n {\n    params.projectId; // abc\n    params.taskId; // 3\n  }}\n  // and actions\n  action={({ params }) => {\n    params.projectId; // abc\n    params.taskId; // 3\n  }}\n  element={}\n/>;\n\nfunction Task() {\n  // returned from `useParams`\n  const params = useParams();\n  params.projectId; // abc\n  params.taskId; // 3\n}\n\nfunction Random() {\n  const match = useMatch("/projects/:projectId/tasks/3");\n  match.params.projectId; // abc\n  match.params.taskId; // 3\n}\n')),(0,a.kt)("h2",{id:"ranked-route-matching"},"Ranked Route Matching"),(0,a.kt)("p",null,"When matching URLs to routes, React Router will rank the routes according the number of segments, static segments, dynamic segments, splats, etc. and pick the ",(0,a.kt)("em",{parentName:"p"},"most specific")," match."),(0,a.kt)("p",null,"For example, consider these two routes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Route path="/teams/:teamId" />\n<Route path="/teams/new" />\n')),(0,a.kt)("p",null,"Now consider the URL is ",(0,a.kt)("a",{parentName:"p",href:"http://example.com/teams/new."},"http://example.com/teams/new.")),(0,a.kt)("p",null,"Even though both routes technically match the URL (",(0,a.kt)("inlineCode",{parentName:"p"},"new")," could be the ",(0,a.kt)("inlineCode",{parentName:"p"},":teamId"),"), you intuitively know that we want the second route (",(0,a.kt)("inlineCode",{parentName:"p"},"/teams/new"),") to be picked. React Router's matching algorithm knows that, too."),(0,a.kt)("p",null,"With ranked routes, you don't have to worry about route ordering."),(0,a.kt)("h2",{id:"active-links"},"Active Links"),(0,a.kt)("p",null,"Most web apps have persistent navigation sections at the top of the UI, the sidebar, and often multiple levels. Styling the active navigation items so the user knows where they are (",(0,a.kt)("inlineCode",{parentName:"p"},"isActive"),") or where they're going (",(0,a.kt)("inlineCode",{parentName:"p"},"isPending"),") in the app is done easily with ``."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<NavLink\n  style={({ isActive, isPending }) => {\n    return {\n      color: isActive ? "red" : "inherit",\n    };\n  }}\n  className={({ isActive, isPending }) => {\n    return isActive ? "active" : isPending ? "pending" : "";\n  }}\n/>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"")),(0,a.kt)("p",null,"You can also ",(0,a.kt)("inlineCode",{parentName:"p"},"useMatch"),' for any other "active" indication outside of links.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'function SomeComp() {\n  const match = useMatch("/messages");\n  return ;\n}\n')))}p.isMDXComponent=!0}}]);